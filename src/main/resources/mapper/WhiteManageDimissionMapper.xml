<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.WhiteManageDimissionMapper">
    <resultMap id="entity" type="com.example.manage.entity.ManageDimission">
        <result column="id" property="id" />
        <result column="applicant" property="applicant" />
        <result column="personnel_code" property="personnelCode" />
        <result column="reasons_for_leaving" property="reasonsForLeaving" />
        <result column="submission_time" property="submissionTime" />
        <result column="resignation_time" property="resignationTime" />
        <result column="applicant_state" property="applicantState" />
        <result column="approver_time" property="approverTime" />
        <association property="sysPersonnel" javaType="com.example.manage.entity.SysPersonnel">
            <result column="p_id" property="id" />
            <result column="p_name" property="name" />
            <result column="p_phone" property="phone" />
            <result column="p_employment_status" property="employmentStatus" />
        </association>
        <collection property="sysManagement" ofType="com.example.manage.entity.SysManagement">
            <result column="m_id" property="id" />
            <result column="m_name" property="name" />
        </collection>
    </resultMap>
    <select id="queryCount" resultType="int" parameterType="hashmap">
        select count(<include refid="tableSql"/>.id) as id from
        <include refid="tableSql"/>
        <include refid="relevanceSql"/>
        <include refid="whereSqlModel"/>
    </select>
    <select id="queryAll" resultMap="entity" parameterType="hashmap">
        select
        <include refid="returnSql"/>
        from
        <include refid="tableSql"/>
        <include refid="relevanceSql"/>
        <include refid="whereSqlModel" />
        <include refid="safeOrderBy"/>
        <include refid="safeLIMIT"/>
    </select>
    <!--  返回  -->
    <sql id="returnSql">
        <include refid="tableSql"/>.*
        ,sys_management.id as m_id
        ,sys_management.name as m_name
        ,sys_personnel.id as p_id
        ,sys_personnel.name as p_name
        ,sys_personnel.phone as p_phone
        ,sys_personnel.employment_status as p_employment_status
    </sql>
    <sql id="tableSql">
        manage.manage_dimission
    </sql>
    <!--  进行关联表  -->
    <sql id="relevanceSql">
        LEFT JOIN sys_personnel on sys_personnel.personnel_code = <include refid="tableSql"/>.personnel_code
        LEFT JOIN sys_management on sys_management.id = <include refid="tableSql"/>.management_id
    </sql>
    <sql id="whereSqlModel">
        where 1 = 1
        <if test="personnelId != null and personnelId != ''"> and sys_personnel.`id` = #{personnelId}</if>
        <if test="inManagementId != null and inManagementId != ''">
            and <include refid="tableSql"/>.`management_id` in
            <foreach collection="inManagementId" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="inRoleId != null and inRoleId != ''">
            and sys_personnel.role_id in
            <foreach collection="inRoleId" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
    </sql>
    <sql id="safeLIMIT">
        <if test="queryAll != 'yes'">
            <if test="pageNum != null and pageNum != ''">
                LIMIT #{index},#{pageNum}
            </if>
        </if>
    </sql>
    <sql id="safeOrderBy">
        order by FIELD(<include refid="tableSql"/>.`applicant_state`,
        'pending') desc,<include refid="tableSql"/>.id desc
    </sql>
</mapper>
