<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.ISysTableNameMapper">
    <resultMap id="entity" type="com.example.manage.entity.SysTableName">
        <result column="id" property="id" />
        <result column="name" property="name" />
        <result column="table_name" property="tableName" />
        <collection property="sysTableAuthorityS" ofType="com.example.manage.entity.SysTableAuthority">
            <result column="s_id" property="id" />
            <result column="s_table_name_id" property="tableNameId" />
            <result column="s_authority" property="authority" />
            <result column="s_authority_state" property="authorityState" />
            <result column="s_role_id" property="roleId" />
        </collection>
    </resultMap>
    <select id="queryCount" resultType="int" parameterType="hashmap">
        select count(<include refid="tableSql"/>.id) as id from
        <include refid="tableSql"/>
        <include refid="whereSqlModel"/>
    </select>
    <select id="queryAll" resultMap="entity" parameterType="hashmap">
        select
            <include refid="returnSql"/>
        from
        <include refid="tableSql" />
        <include refid="relevanceSql" />
        <include refid="whereSqlModel" />
        <include refid="safeOrderBy" />
        <include refid="safeLIMIT" />
    </select>
    <sql id="tableSql">
        manage.sys_table_name
    </sql>
    <sql id="returnSql">
        <include refid="tableSql"/>.*
        ,sys_table_authority.id as s_id
        ,sys_table_authority.table_name_id as s_table_name_id
        ,sys_table_authority.authority as s_authority
        ,sys_table_authority.authority_state as s_authority_state
        ,sys_table_authority.role_id as s_role_id
    </sql>
    <sql id="relevanceSql">
        LEFT JOIN sys_table_authority on sys_table_authority.table_name_id = <include refid="tableSql"/>.id
    </sql>
    <sql id="whereSqlModel">
        where 1 = 1
        <if test="id != null "> and <include refid="tableSql"/>.`id` = #{id}</if>
    </sql>
    <sql id="safeLIMIT">
        <if test="queryAll != 'yes'">
            <if test="pageNum != null and pageNum != ''">
                LIMIT #{index},#{pageNum}
            </if>
        </if>
    </sql>
    <sql id="safeOrderBy">
        order by <include refid="tableSql"/>.id desc
    </sql>
</mapper>
