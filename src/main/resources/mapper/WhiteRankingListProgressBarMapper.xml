<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.WhiteRankingListProgressBarMapper">
    <resultMap id="entity" type="com.example.manage.entity.ranking_list.RankingList">
        <result column="id" property="id" />
        <result column="count_number" property="countNumber" />
        <result column="day_time" property="dayTime" />
        <result column="name" property="name" />
        <result column="card_type_name" property="cardTypeName" />
        <result column="report_status" property="reportStatus" />
        <result column="already_report_status" property="alreadyReportStatus" />
        <result column="activation" property="activation" />
        <result column="approved" property="approved" />
        <result column="artificial" property="artificial" />
        <result column="refuse" property="refuse" />
    </resultMap>

    <!--  查询数量  -->
    <select id="queryAll" resultMap="entity" parameterType="hashmap">

        <choose>
            <when test="mId != null and mId != '' or managementId != null and managementId != ''">
                SELECT
                <choose>
                    <when test="managementId != null and managementId != ''">
                        <include refid="tableSqlSManagement" />.`name`,
                    </when>
                    <otherwise>
                        '全部' as `name`,
                    </otherwise>
                </choose>
                DATE_FORMAT(<include refid="tableSqlPReport" />.report_time, '%Y-%m-%d') as day_time,
                <include refid="returnSql" />
                FROM
                <include refid="tableSqlSManagement" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="managementState"/>
                <include refid="managementId"/>
                <include refid="safeGroupBy" />
                <include refid="safeOrderBy" />
            </when>
            <otherwise>
                SELECT
                <choose>
                    <when test="sysPersonnelId != null and sysPersonnelId != ''">
                        <include refid="tableSqlPersonnel" />.`name`,
                    </when>
                    <otherwise>
                        '全部' as `name`,
                    </otherwise>
                </choose>
                DATE_FORMAT(<include refid="tableSqlPReport" />.report_time, '%Y-%m-%d') as day_time,
                <include refid="returnSql" />
                FROM
                <include refid="tableSqlPersonnel" />
                <include refid="relevanceSqlPpersonnel" />
                <include refid="whereSqlModel" />
                <include refid="sysPersonnelId"/>
                <include refid="safeGroupBy" />
                <include refid="safeOrderBy" />
            </otherwise>
        </choose>
    </select>
    <!--  返回  -->
    <sql id="returnSql">
        <choose>
            <when test="manageCardTypeId != null and manageCardTypeId != ''">
                <include refid="tableSqlCardType" />.`name` as card_type_name,
            </when>
            <otherwise>
                '全部' as `card_type_name`,
            </otherwise>
        </choose>
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.entry_number else 0 end),0) AS count_number,
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.approved_number else 0 end),0) AS approved,
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.valid_number else 0 end),0) AS activation,
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.refuse_number else 0 end),0) AS refuse,
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.entry_number else 0 end) -
        SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.approved_number else 0 end) -
        SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.refuse_number else 0 end),0) AS artificial
    </sql>
    <!--  表名称  -->
    <sql id="tableSqlCardType">
        manage.card_type
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlPersonnel">
        manage.sys_personnel
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlPReport">
        manage.performance_report
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlSManagement">
        manage.sys_management
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlMCType">
        manage.manage_card_type
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlManagementPersonnel">
        manage.management_personnel
    </sql>
    <!--  进行关联表项目  -->
    <sql id="relevanceSql">
        LEFT JOIN <include refid="tableSqlPReport" /> ON <include refid="tableSqlSManagement" />.id = <include refid="tableSqlPReport" />.management_id
        <if test="type == 'day'">
            <include refid="todayDay" />
        </if>
        <if test="type == 'week'">
            <include refid="todayWeek" />
        </if>
        <if test="type == 'month'">
            <include refid="todayMonth" />
        </if>
        <if test="type == '自定义'">
            <include refid="todayStartCustom" />
        </if>
        <include refid="reportApproverState" />
        <if test="reportStatus != null and reportStatus != ''">
            and <include refid="tableSqlPReport" />.report_status = #{reportStatus}
        </if>
        <if test="manageCardTypeId != null and manageCardTypeId != ''">
            and <include refid="tableSqlPReport" />.card_type_id = #{manageCardTypeId}
        </if>
        LEFT JOIN <include refid="tableSqlCardType" /> ON <include refid="tableSqlCardType" />.id = <include refid="tableSqlPReport" />.card_type_id
    </sql>
    <!--  进行关联人员表 -->
    <sql id="relevanceSqlPpersonnel">
        LEFT JOIN
        <include refid="tableSqlPReport" />
        ON
        <include refid="tableSqlPersonnel" />.personnel_code =
        <include refid="tableSqlPReport" />.personnel_code
        <if test="type == 'day'">
            <include refid="todayDay" />
        </if>
        <if test="type == 'week'">
            <include refid="todayWeek" />
        </if>
        <if test="type == 'month'">
            <include refid="todayMonth" />
        </if>
        <if test="type == '自定义'">
            <include refid="todayStartCustom" />
        </if>
        <if test="reportStatus != null and reportStatus != ''">
            and <include refid="tableSqlPReport" />.report_status = #{reportStatus}
        </if>
        <if test="manageCardTypeId != null and manageCardTypeId != ''">
            and <include refid="tableSqlPReport" />.card_type_id = #{manageCardTypeId}
        </if>
        <include refid="reportApproverState" />

        LEFT JOIN
        <include refid="tableSqlSManagement" />
        ON
        <include refid="tableSqlSManagement" />.id =
        <include refid="tableSqlPReport" />.management_id

        LEFT JOIN
        <include refid="tableSqlCardType" />
        ON
        <include refid="tableSqlCardType" />.id =
        <include refid="tableSqlPReport" />.card_type_id
    </sql>
    <!--  条件  -->
    <sql id="whereSqlModel">
        where 1 = 1
        <if test="mId != null and mId != ''">
            and <include refid="tableSqlSManagement" />.id in
            <foreach collection="inManagementId" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="pId != null and pId != ''">
            and <include refid="tableSqlPersonnel" />.id in
            <foreach collection="inPersonnelId" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
    </sql>

    <!--  本日  -->
    <sql id="todayDay">
        AND to_days(<include refid="tableSqlPReport" />.report_time) = to_days(NOW())
    </sql>
    <!--  本周  -->
    <sql id="todayWeek">
        AND YEARWEEK(date_format(<include refid="tableSqlPReport" />.report_time ,'%Y-%m-%d') - INTERVAL 1 DAY) = YEARWEEK(now() - INTERVAL 1 DAY)
    </sql>
    <!--  本月  -->
    <sql id="todayMonth">
        AND DATE_FORMAT( <include refid="tableSqlPReport" />.report_time, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
    </sql>
    <!--  自定义日期  -->
    <sql id="todayStartCustom">
        AND <include refid="tableSqlPReport" />.report_time BETWEEN #{thisStartTime} AND #{thisEndTime}
    </sql>
    <!--  通过状态  -->
    <sql id="reportApproverState">
        AND <include refid="tableSqlPReport" />.approver_state = 'agree'
    </sql>
    <!--  项目状态  -->
    <sql id="managementState">
        AND <include refid="tableSqlSManagement" />.management_state = 1
    </sql>
    <!--  项目编码  -->
    <sql id="managementId">
        <if test="managementId != null and managementId != ''">
            and <include refid="tableSqlPReport" />.management_id = #{managementId}
        </if>
    </sql>
    <!--  人员状态  -->
    <sql id="sysPersonnelId">
        <if test="sysPersonnelId != null and sysPersonnelId != ''">
            and <include refid="tableSqlPersonnel" />.id = #{sysPersonnelId}
        </if>
    </sql>
    <!--  分组  -->
    <sql id="safeGroupBy">
        GROUP BY DATE_FORMAT(<include refid="tableSqlPReport" />.report_time, '%Y-%m-%d')
    </sql>
    <!--  排序  -->
    <sql id="safeOrderBy">
        ORDER BY DATE_FORMAT(<include refid="tableSqlPReport" />.report_time, '%Y-%m-%d') DESC
    </sql>
    <!--  分页  -->
    <sql id="safeLIMIT">
        <if test="index != null">
            LIMIT #{index},#{pageNum}
        </if>
    </sql>

    <!--  历史  -->
    <select id="queryAllTwo" resultMap="entity" parameterType="hashmap">
        <choose>
            <when test="managementId != null and managementId != ''">
                SELECT
                <include refid="tableSqlPersonnel" />.`name`,
                <include refid="tableSqlCardType" />.`name` as card_type_name,
                <include refid="tableSqlPReport" />.`report_status` as report_status,
                CONCAT('[\"有效\",\"',
                GROUP_CONCAT(<include refid="tableSqlPReport" />.`report_status`
                ORDER BY
                <include refid="tableSqlPersonnel" />.id SEPARATOR '\"\,\"'),'\"]')
                as
                already_report_status
                ,
                sum(case when <include refid="tableSqlPReport" />.`report_status` in ('批核已激活','批核未激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS count_number,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('批核已激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS activation,
                sum(case when <include refid="tableSqlPReport" />.`report_status` in ('批核未激活','批核已激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS approved,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('转人工') then <include refid="tableSqlPReport" />.report_number else 0 end) AS artificial,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('拒绝') then <include refid="tableSqlPReport" />.report_number else 0 end) AS refuse
                FROM
                <include refid="tableSqlPersonnel" />
                <include refid="relevanceSqlPpersonnel" />
                <include refid="whereSqlModel" />
                <include refid="safeGroupBy" />
                <include refid="safeOrderBy" />
                <include refid="safeLIMIT" />
            </when>
            <otherwise>
                SELECT
                <include refid="tableSqlSManagement" />.`name`,
                <include refid="tableSqlCardType" />.`name` as card_type_name,
                CONCAT('[\"有效\",\"',
                GROUP_CONCAT(<include refid="tableSqlPReport" />.`report_status`),'\"]')
                as
                already_report_status,
                sum(case when <include refid="tableSqlPReport" />.`report_status` in ('批核已激活','批核未激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS count_number,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('批核已激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS activation,
                sum(case when <include refid="tableSqlPReport" />.`report_status` in ('批核未激活','批核已激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS approved,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('转人工') then <include refid="tableSqlPReport" />.report_number else 0 end) AS artificial,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('拒绝') then <include refid="tableSqlPReport" />.report_number else 0 end) AS refuse
                FROM
                <include refid="tableSqlSManagement" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="safeGroupBy" />
                <include refid="safeOrderBy" />
                <include refid="safeLIMIT" />
            </otherwise>
        </choose>
    </select>
</mapper>