<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.ISysPersonnelMapper">
    <resultMap id="entity" type="com.example.manage.entity.SysPersonnel">
        <result column="id" property="id" />
        <result column="phone" property="phone" />
        <result column="place_of_domicile" property="placeOfDomicile" />
        <result column="personnel_code" property="personnelCode" />
        <result column="username" property="username" />
        <result column="role_id" property="roleId" />
        <result column="password" property="password" />
        <result column="name" property="name" />
        <result column="position_post" property="positionPost" />
        <result column="image" property="image" />
        <result column="birthday" property="birthday" />
        <result column="employment_status" property="employmentStatus" />
        <result column="chief_steward_id" property="chiefStewardId" />
        <result column="salary" property="salary" />
        <result column="standby_application" property="standbyApplication" />
        <result column="official_or_trainee_staff" property="officialOrTraineeStaff" />
        <result column="social_security_payment" property="socialSecurityPayment" />
        <result column="commercial_insurance" property="commercialInsurance" />
        <result column="entry_time" property="entryTime" />
        <result column="id_number" property="idNumber" />
        <result column="emergency_contact_name" property="emergencyContactName" />
        <result column="emergency_contact_phone" property="emergencyContactPhone" />
        <result column="permanent_residence" property="permanentResidence" />
        <result column="leave_time" property="leaveTime" />
        <result column="open_id" property="openId" />
        <result column="sex" property="sex" />
        <result column="trial_date" property="trialDate" />
        <association property="sysRole" javaType="com.example.manage.entity.SysRole">
            <result column="r_id" property="id" />
            <result column="r_name" property="name" />
        </association>
        <collection property="sysManagement" ofType="com.example.manage.entity.SysManagement">
            <result column="m_id" property="id" />
            <result column="m_name" property="name" />
            <result column="m_project_address" property="projectAddress" />
            <result column="m_available_balance" property="availableBalance" />
            <result column="m_monthly_indicators" property="monthlyIndicators" />
            <result column="m_management_state" property="managementState" />
        </collection>
    </resultMap>
    <select id="queryCount" resultType="int" parameterType="hashmap">
        select count(DISTINCT <include refid="tableSqlAs"/>.id) as id from
        <include refid="tableSql" />
        as
        <include refid="tableSqlAs" />
        <include refid="relevanceSql" />
        <include refid="whereSqlModel"/>
    </select>
    <select id="queryAll" resultMap="entity" parameterType="hashmap">
        <choose>
            <when test="managementId != null and managementId != '' or keyWord != null and keyWord != '' or login != null and login != ''">
                select
                <include refid="returnSql"/>
                from
                <include refid="tableSql" />
                as
                <include refid="tableSqlAs" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="safeOrderByAs"/>
                <include refid="safeLIMIT"/>
            </when>
            <otherwise>
                select
                <include refid="returnSql"/>
                from
                (<include refid="tableReturn" />)
                as
                <include refid="tableSqlAs" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
            </otherwise>
        </choose>
    </select>
    <sql id="tableSqlAs">
        sys_p
    </sql>
    <!--  子表  -->
    <sql id="tableReturn">
        select
        <include refid="tableSql"/>.*
        from
        <include refid="tableSql"/>
        <include refid="whereSqlModelAs" />
        <include refid="safeOrderBy"/>
        <include refid="safeLIMIT"/>
    </sql>
    <sql id="tableSql">
        manage.sys_personnel
    </sql>
    <!--  返回  -->
    <sql id="returnSql">
        <include refid="tableSqlAs"/>.*
        ,sys_role.name as r_name
        ,sys_role.id as r_id
        ,sys_management.id as m_id
        ,sys_management.name as m_name
        ,sys_management.project_address as m_project_address
        ,sys_management.available_balance as m_available_balance
        ,sys_management.monthly_indicators as m_monthly_indicators
        ,sys_management.management_state as m_management_state
    </sql>
    <!--  进行关联表  -->
    <sql id="relevanceSql">
        LEFT JOIN sys_role on sys_role.id = <include refid="tableSqlAs"/>.role_id
        LEFT JOIN management_personnel on management_personnel.personnel_code = <include refid="tableSqlAs" />.personnel_code
        LEFT JOIN sys_management on sys_management.id = management_personnel.management_id
    </sql>
    <sql id="whereSqlModelAs">
        where 1 = 1
        <if test="keyWord != null and keyWord != ''"> and <include refid="tableSql" />.`name` like concat('%',#{keyWord},'%')</if>
        <if test="roleId != null and roleId != ''"> and <include refid="tableSql" />.`role_id` = #{roleId}</if>
    </sql>
    <sql id="whereSqlModel">
        where 1 = 1
        <if test="id != null "> and <include refid="tableSqlAs" />.`id` = #{id}</if>
        <if test="neId != null "> and <include refid="tableSqlAs" />.`id` != #{neId}</if>
        <if test="personnelId != null "> and <include refid="tableSqlAs" />.`id` = #{personnelId}</if>
        <if test="username != null "> and <include refid="tableSqlAs" />.`username` = #{username}</if>
        <if test="password != null "> and <include refid="tableSqlAs" />.`password` = #{password}</if>
        <if test="roleId != null "> and <include refid="tableSqlAs" />.`role_id` = #{roleId}</if>
        <if test="employmentStatus != null "> and <include refid="tableSqlAs" />.`employment_status` = #{employmentStatus}</if>
        <if test="keyWord != null and keyWord != ''"> and <include refid="tableSqlAs" />.`name` like concat('%',#{keyWord},'%')</if>
        <if test="managementId != null and managementId != ''"> and management_personnel.`management_id` = #{managementId}</if>
        <if test="dateFormatBirthday == 'start' "> and DATE_FORMAT(<include refid="tableSqlAs" />.birthday,"%m-%d") BETWEEN #{agoBirthday} AND #{backBirthday}</if>
        <if test="dateFormatBirthday == 'entryTime' "> and DATE_FORMAT(<include refid="tableSqlAs" />.entry_time,"%m-%d") BETWEEN #{agoBirthday} AND #{backBirthday}</if>
    </sql>
    <sql id="safeLIMIT">
        <if test="queryAll != 'yes'">
            <if test="pageNum != null and pageNum != ''">
                LIMIT #{index},#{pageNum}
            </if>
        </if>
    </sql>
    <sql id="safeOrderBy">
        order by <include refid="tableSql"/>.id desc
    </sql>
    <sql id="safeOrderByAs">
        order by <include refid="tableSqlAs"/>.id desc
    </sql>
</mapper>