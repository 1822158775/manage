<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.WhiteRankingListMapper">
    <resultMap id="entity" type="com.example.manage.entity.ranking_list.RankingList">
        <result column="id" property="id" />
        <result column="count_number" property="countNumber" />
        <result column="name" property="name" />
        <result column="card_type_name" property="cardTypeName" />
        <result column="report_status" property="reportStatus" />
        <result column="already_report_status" property="alreadyReportStatus" />
        <result column="activation" property="activation" />
        <result column="approved" property="approved" />
        <result column="artificial" property="artificial" />
        <result column="refuse" property="refuse" />
        <result column="card_type_id" property="cardTypeId" />
        <result column="attendance" property="attendance" />
        <result column="number_of_people" property="numberOfPeople" />
        <result column="monthly_indicators" property="monthlyIndicators" />
    </resultMap>
    <!--  查询签到次数  -->
    <select id="queryPunchingCount" resultMap="entity" resultType="hashmap">
        SELECT
        <include refid="tableSqlSManagement" />.id as id,
        COUNT(DISTINCT <include refid="tableSqlPunchingCardRecord" />.id) as attendance,
        <include refid="tableSqlSManagement" />.number_of_people
        FROM
        <include refid="tableSqlSManagement" />
        <include refid="relevanceSqlPunchingCardRecord" />
        <include refid="whereSqlModel" />
        <include refid="managementState"/>
        <include refid="dayWeekMonth" />
        <if test="type == '自定义'">
            <include refid="todayPunStartCustom" />
        </if>
        <include refid="safeGroupBySManagement" />
    </select>
    <!--  查询当月数量  -->
    <select id="queryCount" resultMap="entity" resultType="hashmap">
        SELECT
        <include refid="tableSqlSManagement" />.id as id,
        <include refid="tableSqlSManagement" />.`name`,
        <include refid="returnSql" />,
        <include refid="tableSqlPReport" />.`card_type_id`
        FROM
        <include refid="tableSqlSManagement" />
        <include refid="relevanceSql" />
        <include refid="whereSqlModel" />
        <include refid="managementState"/>
        <include refid="noSManagementId" />
        <include refid="safeGroupByCardType" />
    </select>
    <!--  查询当月数量  -->
    <select id="queryAllCount" resultMap="entity" resultType="hashmap">
        SELECT
        <include refid="tableSqlSManagement" />.id as id,
        <include refid="tableSqlSManagement" />.`name`,
        <include refid="tableSqlSManagement" />.`monthly_indicators`,
        <include refid="returnSql" />,
        <include refid="tableSqlCardType" />.`id` as card_type_id
        FROM
        <include refid="tableSqlSManagement" />
        <include refid="relevanceSql" />
        <include refid="relevanceSqlManagementCardType" />
        <include refid="whereSqlModel" />
        <include refid="managementState"/>
        <include refid="manageCardTypeId" />
        <include refid="safeGroupByMCT" />
        <include refid="safeOrderBy" />
    </select>
    <!--  查询数量  -->
    <select id="queryAll" resultMap="entity" parameterType="hashmap">
        <choose>
            <when test="managementId != null and managementId != ''">
                SELECT
                <include refid="tableSqlPersonnel" />.id as id,
                <include refid="tableSqlPersonnel" />.`name`,
                <include refid="returnSql" />
                FROM
                <include refid="tableSqlPersonnel" />
                <include refid="relevanceSqlPpersonnel" />
                <include refid="whereSqlModel" />
                <include refid="safeGroupBy" />
                <include refid="safeOrderBy" />
                <include refid="safeLIMIT" />
            </when>
            <otherwise>
                SELECT
                <include refid="tableSqlSManagement" />.id as id,
                <include refid="tableSqlSManagement" />.`name`,
                <include refid="returnSql" />
                FROM
                <include refid="tableSqlSManagement" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="managementState"/>
                <include refid="safeGroupBy" />
                <include refid="safeOrderBy" />
                <include refid="safeLIMIT" />
            </otherwise>
        </choose>
    </select>
    <!--  返回  -->
    <sql id="returnSql">
        <include refid="tableSqlCardType" />.`name` as card_type_name,
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.entry_number else 0 end),0) AS count_number,
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.approved_number else 0 end),0) AS approved,
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.valid_number else 0 end),0) AS activation,
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.refuse_number else 0 end),0) AS refuse,
        coalesce(SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.entry_number else 0 end) -
        SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.approved_number else 0 end) -
        SUM(case when  <include refid="tableSqlPReport" />.id  then <include refid="tableSqlPReport" />.refuse_number else 0 end),0) AS artificial
    </sql>
    <!--  表名称  -->
    <sql id="tableSqlCardType">
        manage.card_type
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlPersonnel">
        manage.sys_personnel
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlPReport">
        manage.performance_report
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlSManagement">
        manage.sys_management
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlMCType">
        manage.manage_card_type
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlManagementPersonnel">
        manage.management_personnel
    </sql>
    <!--  打卡表  -->
    <sql id="tableSqlPunchingCardRecord">
        manage.punching_card_record
    </sql>
    <!--  进行关联表项目  -->
    <sql id="relevanceSql">
        LEFT JOIN <include refid="tableSqlPReport" /> ON <include refid="tableSqlSManagement" />.id = <include refid="tableSqlPReport" />.management_id
        <if test="type == 'day'">
            <include refid="todayDay" />
        </if>
        <if test="type == 'week'">
            <include refid="todayWeek" />
        </if>
        <if test="type == 'month'">
            <include refid="todayMonth" />
        </if>
        <if test="type == '自定义'">
            <include refid="todayStartCustom" />
        </if>
        <include refid="reportApproverState" />
        <if test="reportStatus != null and reportStatus != ''">
            and <include refid="tableSqlPReport" />.report_status = #{reportStatus}
        </if>
        <if test="manageCardTypeId != null and manageCardTypeId != ''">
            and <include refid="tableSqlPReport" />.card_type_id = #{manageCardTypeId}
        </if>
        LEFT JOIN <include refid="tableSqlCardType" /> ON <include refid="tableSqlCardType" />.id = <include refid="tableSqlPReport" />.card_type_id
    </sql>
    <!--  进行关联人员表 -->
    <sql id="relevanceSqlPpersonnel">
        LEFT JOIN
        <include refid="tableSqlPReport" />
        ON
        <include refid="tableSqlPersonnel" />.personnel_code =
        <include refid="tableSqlPReport" />.personnel_code
        <if test="type == 'day'">
            <include refid="todayDay" />
        </if>
        <if test="type == 'week'">
            <include refid="todayWeek" />
        </if>
        <if test="type == 'month'">
            <include refid="todayMonth" />
        </if>
        <if test="type == '自定义'">
            <include refid="todayStartCustom" />
        </if>
        <if test="reportStatus != null and reportStatus != ''">
            and <include refid="tableSqlPReport" />.report_status = #{reportStatus}
        </if>
        <if test="manageCardTypeId != null and manageCardTypeId != ''">
            and <include refid="tableSqlPReport" />.card_type_id = #{manageCardTypeId}
        </if>
        <include refid="reportApproverState" />

        LEFT JOIN
        <include refid="tableSqlSManagement" />
        ON
        <include refid="tableSqlSManagement" />.id =
        <include refid="tableSqlPReport" />.management_id
        <if test="managementId != null and managementId != ''">
            and <include refid="tableSqlPReport" />.management_id = #{managementId}
        </if>
        <if test="inManagementId != null and inManagementId != ''">
            and <include refid="tableSqlSManagement" />.id in
            <foreach collection="inManagementId" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>

        LEFT JOIN
        <include refid="tableSqlCardType" />
        ON
        <include refid="tableSqlCardType" />.id =
        <include refid="tableSqlPReport" />.card_type_id
    </sql>
    <!--  关联项目卡表  -->
    <sql id="relevanceSqlManagementCardType">
        LEFT JOIN <include refid="tableSqlMCType" /> ON <include refid="tableSqlMCType" />.manage_code = <include refid="tableSqlSManagement" />.management_code
    </sql>
    <!--  关联打卡表  -->
    <sql id="relevanceSqlPunchingCardRecord">
        LEFT JOIN <include refid="tableSqlPunchingCardRecord" /> ON <include refid="tableSqlPunchingCardRecord" />.management_id = <include refid="tableSqlSManagement" />.id
    </sql>
    <!--  条件  -->
    <sql id="whereSqlModel">
        where 1 = 1
        <if test="inManagementId != null and inManagementId != ''">
            and <include refid="tableSqlSManagement" />.id in
            <foreach collection="inManagementId" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
    </sql>

    <!--  本日  -->
    <sql id="todayDay">
        AND to_days(<include refid="tableSqlPReport" />.report_time) = to_days(NOW())
    </sql>
    <!--  本周  -->
    <sql id="todayWeek">
        AND YEARWEEK(date_format(<include refid="tableSqlPReport" />.report_time ,'%Y-%m-%d') - INTERVAL 1 DAY) = YEARWEEK(now() - INTERVAL 1 DAY)
    </sql>
    <!--  本月  -->
    <sql id="todayMonth">
        AND DATE_FORMAT( <include refid="tableSqlPReport" />.report_time, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
    </sql>


    <!--  本日  -->
    <sql id="todayPunDay">
        AND to_days(<include refid="tableSqlPunchingCardRecord" />.clocking_day_time) = to_days(NOW())
    </sql>
    <!--  本周  -->
    <sql id="todayPunWeek">
        AND YEARWEEK(date_format(<include refid="tableSqlPunchingCardRecord" />.clocking_day_time ,'%Y-%m-%d') - INTERVAL 1 DAY) = YEARWEEK(now() - INTERVAL 1 DAY)
    </sql>
    <!--  本月  -->
    <sql id="todayPunMonth">
        AND DATE_FORMAT( <include refid="tableSqlPunchingCardRecord" />.clocking_day_time, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
    </sql>

    <!--  自定义日期  -->
    <sql id="todayStartCustom">
        AND <include refid="tableSqlPReport" />.report_time BETWEEN #{thisStartTime} AND #{thisEndTime}
    </sql>
    <!--  通过状态  -->
    <sql id="reportApproverState">
        AND <include refid="tableSqlPReport" />.approver_state = 'agree'
    </sql>
    <!--  项目状态  -->
    <sql id="managementState">
        AND <include refid="tableSqlSManagement" />.management_state = 1
    </sql>
    <!--  不查询指定项目  -->
    <sql id="noSManagementId">
        <if test="noManage != null">
            AND <include refid="tableSqlSManagement" />.id != 1
            AND <include refid="tableSqlSManagement" />.id != 2
        </if>
    </sql>
    <!--  卡类型  -->
    <sql id="manageCardTypeId">
        <if test="manageCardTypeId != null and manageCardTypeId != ''">
            and <include refid="tableSqlMCType" />.card_type_id = #{manageCardTypeId}
        </if>
    </sql>
    <!--  打卡时间  -->
    <sql id="dayWeekMonth">
        <if test="type == 'day'">
            <include refid="todayPunDay" />
        </if>
        <if test="type == 'week'">
            <include refid="todayPunWeek" />
        </if>
        <if test="type == 'month'">
            <include refid="todayPunMonth" />
        </if>
    </sql>
    <!--  打卡自定义日期  -->
    <sql id="todayPunStartCustom">
        AND <include refid="tableSqlPunchingCardRecord" />.clocking_day_time BETWEEN #{thisStartTime} AND #{thisEndTime}
    </sql>
    <!--  分组  -->
    <sql id="safeGroupBy">
        GROUP BY
        <choose>
            <!--            <when test="groupByManagement == 'yes' and groupByCardType == 'yes' and groupByPersonnel == 'yes'">-->
            <!--                <include refid="tableSqlSManagement" />.id,<include refid="tableSqlCardType" />.id,<include refid="tableSqlPersonnel" />.id-->
            <!--            </when>-->

            <!--            <when test="groupByManagement == 'yes'  and groupByCardType != 'yes' and groupByPersonnel != 'yes'">-->
            <!--                <include refid="tableSqlSManagement" />.id-->
            <!--            </when>-->
            <!--            <when test="groupByManagement != 'yes'  and groupByCardType == 'yes' and groupByPersonnel != 'yes'">-->
            <!--                <include refid="tableSqlCardType" />.id-->
            <!--            </when>-->
            <!--            <when test="groupByManagement != 'yes'  and groupByCardType != 'yes' and groupByPersonnel == 'yes'">-->
            <!--                <include refid="tableSqlPersonnel" />.id-->
            <!--            </when>-->

            <!--            <when test="groupByManagement == 'yes'  and groupByCardType == 'yes' and groupByPersonnel != 'yes'">-->
            <!--                <include refid="tableSqlSManagement" />.id,<include refid="tableSqlCardType" />.id-->
            <!--            </when>-->
            <!--            <when test="groupByManagement != 'yes'  and groupByCardType == 'yes' and groupByPersonnel == 'yes'">-->
            <!--                <include refid="tableSqlCardType" />.id,<include refid="tableSqlPersonnel" />.id-->
            <!--            </when>-->
            <!--            <when test="groupByManagement == 'yes'  and groupByCardType != 'yes' and groupByPersonnel == 'yes'">-->
            <!--                <include refid="tableSqlPersonnel" />.id,<include refid="tableSqlSManagement" />.id-->
            <!--            </when>-->
            <when test="managementId != null and managementId != ''">
                <include refid="tableSqlPersonnel" />.id
            </when>
            <otherwise>
                <include refid="tableSqlSManagement" />.id
            </otherwise>
        </choose>
    </sql>
    <!--  分组  -->
    <sql id="safeGroupByCardType">
        GROUP BY <include refid="tableSqlCardType" />.id
    </sql>
    <!--  分组  -->
    <sql id="safeGroupBySManagement">
        GROUP BY <include refid="tableSqlSManagement" />.id
    </sql>
    <!--  分组  -->
    <sql id="safeGroupByMCT">
        GROUP BY <include refid="tableSqlCardType" />.id,<include refid="tableSqlSManagement" />.id
    </sql>
    <!--  分组  -->
    <!--  排序  -->
    <sql id="safeOrderBy">
        ORDER BY
            FIELD(<include refid="tableSqlSManagement"/>.`id`,
            15,
            27,
            16,
            17,
            18,
            38,
            20,
            36,
            28,
            14,
            29,
            13,
            23,
            19,
            34,
            6,
            7,
            11,
            5,
            8,
            12,
            26,
            12,
            37,
            30,
            32),
            approved DESC,activation DESC,<include refid="tableSqlPReport" />.report_time
    </sql>
    <!--  分页  -->
    <sql id="safeLIMIT">
        <if test="index != null">
            LIMIT #{index},#{pageNum}
        </if>
    </sql>

    <!--  历史  -->
    <select id="queryAllTwo" resultMap="entity" parameterType="hashmap">
        <choose>
            <when test="managementId != null and managementId != ''">
                SELECT
                <include refid="tableSqlPersonnel" />.`name`,
                <include refid="tableSqlCardType" />.`name` as card_type_name,
                <include refid="tableSqlPReport" />.`report_status` as report_status,
                CONCAT('[\"有效\",\"',
                GROUP_CONCAT(<include refid="tableSqlPReport" />.`report_status`
                ORDER BY
                <include refid="tableSqlPersonnel" />.id SEPARATOR '\"\,\"'),'\"]')
                as
                already_report_status
                ,
                sum(case when <include refid="tableSqlPReport" />.`report_status` in ('批核已激活','批核未激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS count_number,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('批核已激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS activation,
                sum(case when <include refid="tableSqlPReport" />.`report_status` in ('批核未激活','批核已激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS approved,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('转人工') then <include refid="tableSqlPReport" />.report_number else 0 end) AS artificial,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('拒绝') then <include refid="tableSqlPReport" />.report_number else 0 end) AS refuse
                FROM
                <include refid="tableSqlPersonnel" />
                <include refid="relevanceSqlPpersonnel" />
                <include refid="whereSqlModel" />
                <include refid="safeGroupBy" />
                <include refid="safeOrderBy" />
                <include refid="safeLIMIT" />
            </when>
            <otherwise>
                SELECT
                <include refid="tableSqlSManagement" />.`name`,
                <include refid="tableSqlCardType" />.`name` as card_type_name,
                CONCAT('[\"有效\",\"',
                GROUP_CONCAT(<include refid="tableSqlPReport" />.`report_status`),'\"]')
                as
                already_report_status,
                sum(case when <include refid="tableSqlPReport" />.`report_status` in ('批核已激活','批核未激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS count_number,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('批核已激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS activation,
                sum(case when <include refid="tableSqlPReport" />.`report_status` in ('批核未激活','批核已激活') then <include refid="tableSqlPReport" />.report_number else 0 end) AS approved,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('转人工') then <include refid="tableSqlPReport" />.report_number else 0 end) AS artificial,
                sum(case when <include refid="tableSqlPReport" />.`report_status` = ('拒绝') then <include refid="tableSqlPReport" />.report_number else 0 end) AS refuse
                FROM
                <include refid="tableSqlSManagement" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="safeGroupBy" />
                <include refid="safeOrderBy" />
                <include refid="safeLIMIT" />
            </otherwise>
        </choose>
    </select>
</mapper>