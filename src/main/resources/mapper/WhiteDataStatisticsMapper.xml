<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.WhiteDataStatisticsMapper">
    <resultMap id="entity" type="com.example.manage.entity.data_statistics.DataStatistics">
        <collection property="dataStatisticsTodayDays" ofType="com.example.manage.entity.data_statistics.DataStatisticsTodayDay">
            <result column="today_day_activation" property="activation" />
            <result column="today_day_approved" property="approved" />
            <result column="today_day_artificial" property="artificial" />
            <result column="today_day_refuse" property="refuse" />
            <result column="today_day_all" property="all" />

            <result column="today_day_name" property="nametype" />
            <result column="today_day_start_time" property="startTime" />
            <result column="today_day_end_time" property="endTime" />

            <result column="today_day_activation_growth_rate" property="activationGrowthRate" />
            <result column="today_day_approved_growth_rate" property="approvedGrowthRate" />
            <result column="today_day_artificial_growth_rate" property="artificialGrowthRate" />
            <result column="today_day_refuse_growth_rate" property="refuseGrowthRate" />
            <result column="today_day_all_growth_rate" property="allGrowthRate" />
            <result column="today_day_valid_growth_rate" property="validGrowthRate" />
            <result column="today_day_ratio_growth_rate" property="ratioGrowthRate" />
        </collection>

        <collection property="dataStatisticsTodayWeeks" ofType="com.example.manage.entity.data_statistics.DataStatisticsTodayWeek">
            <result column="today_week_activation" property="activation" />
            <result column="today_week_approved" property="approved" />
            <result column="today_week_artificial" property="artificial" />
            <result column="today_week_refuse" property="refuse" />
            <result column="today_week_all" property="all" />

            <result column="today_week_name" property="nametype" />
            <result column="today_week_start_time" property="startTime" />
            <result column="today_week_end_time" property="endTime" />

            <result column="today_week_activation_growth_rate" property="activationGrowthRate" />
            <result column="today_week_approved_growth_rate" property="approvedGrowthRate" />
            <result column="today_week_artificial_growth_rate" property="artificialGrowthRate" />
            <result column="today_week_refuse_growth_rate" property="refuseGrowthRate" />
            <result column="today_week_all_growth_rate" property="allGrowthRate" />
            <result column="today_week_valid_growth_rate" property="validGrowthRate" />
            <result column="today_week_ratio_growth_rate" property="ratioGrowthRate" />
        </collection>

        <collection property="dataStatisticsTodayMonths" ofType="com.example.manage.entity.data_statistics.DataStatisticsTodayMonth">
            <result column="today_month_activation" property="activation" />
            <result column="today_month_approved" property="approved" />
            <result column="today_month_artificial" property="artificial" />
            <result column="today_month_refuse" property="refuse" />
            <result column="today_month_all" property="all" />

            <result column="today_month_name" property="nametype" />
            <result column="today_month_start_time" property="startTime" />
            <result column="today_month_end_time" property="endTime" />

            <result column="today_month_activation_growth_rate" property="activationGrowthRate" />
            <result column="today_month_approved_growth_rate" property="approvedGrowthRate" />
            <result column="today_month_artificial_growth_rate" property="artificialGrowthRate" />
            <result column="today_month_refuse_growth_rate" property="refuseGrowthRate" />
            <result column="today_month_all_growth_rate" property="allGrowthRate" />
            <result column="today_month_valid_growth_rate" property="validGrowthRate" />
            <result column="today_month_ratio_growth_rate" property="ratioGrowthRate" />
        </collection>

    </resultMap>
    <select id="queryAll" resultMap="entity" parameterType="hashmap">
        select
            count(1)

            ,'日' as today_day_name
            ,'周' as today_week_name
            ,'月' as today_month_name

            ,(SELECT CURDATE()) as today_day_start_time

            ,(select date_sub(curdate(),INTERVAL WEEKDAY(curdate()) + 1 DAY)) as today_week_start_time
            ,(select date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 6 DAY)) as today_week_end_time

            ,(SELECT concat(date_format(LAST_DAY(now()),'%Y-%m-'),'01')) as today_month_start_time
            ,(SELECT LAST_DAY(now())) as today_month_end_time

            ,today_day_activation.today_day_activation
            ,today_day_approved.today_day_approved
            ,today_day_artificial.today_day_artificial
            ,today_day_refuse.today_day_refuse
            ,today_day_all.today_day_all

            ,today_week_activation.today_week_activation
            ,today_week_approved.today_week_approved
            ,today_week_artificial.today_week_artificial
            ,today_week_refuse.today_week_refuse
            ,today_week_all.today_week_all

            ,today_month_activation.today_month_activation
            ,today_month_approved.today_month_approved
            ,today_month_artificial.today_month_artificial
            ,today_month_refuse.today_month_refuse
            ,today_month_all.today_month_all

            ,today_yester_activation.today_yester_activation
            ,today_yester_approved.today_yester_approved
            ,today_yester_artificial.today_yester_artificial
            ,today_yester_refuse.today_yester_refuse
            ,today_yester_all.today_yester_all

            ,last_week_activation.last_week_activation
            ,last_week_approved.last_week_approved
            ,last_week_artificial.last_week_artificial
            ,last_week_refuse.last_week_refuse
            ,last_week_all.last_week_all

            ,last_month_activation.last_month_activation
            ,last_month_approved.last_month_approved
            ,last_month_artificial.last_month_artificial
            ,last_month_refuse.last_month_refuse
            ,last_month_all.last_month_all

            ,format(coalesce((today_day_activation.today_day_activation
            -
            today_yester_activation.today_yester_activation)
            /
            today_yester_activation.today_yester_activation
            *
            <include refid="percentageSql" />,0) , 2)
            as
            today_day_activation_growth_rate

            ,format(coalesce((today_day_approved.today_day_approved
            -
            today_yester_approved.today_yester_approved)
            /
            today_yester_approved.today_yester_approved
            *
            <include refid="percentageSql" />,0),2)
            as
            today_day_approved_growth_rate

            ,format(coalesce(((today_day_approved.today_day_approved + today_day_activation.today_day_activation)
            -
            (today_yester_approved.today_yester_approved + today_yester_activation.today_yester_activation))
            /
            (today_yester_approved.today_yester_approved + today_yester_activation.today_yester_activation)
            *
            <include refid="percentageSql" />,0),2)
            as
            today_day_valid_growth_rate

            ,format(coalesce(
            (today_day_approved.today_day_approved + today_day_activation.today_day_activation)
            /
            today_day_all
            *
            <include refid="percentageSql" />,0),2)
            as
            today_day_ratio_growth_rate

            ,format(coalesce((today_day_artificial.today_day_artificial
            -
            today_yester_artificial.today_yester_artificial)
            /
            today_yester_artificial.today_yester_artificial
            *
            <include refid="percentageSql" />,0),2)
            as
            today_day_artificial_growth_rate

            ,format(coalesce((today_day_all.today_day_all
            -
            today_yester_all.today_yester_all)
            /
            today_yester_all.today_yester_all
            *
            <include refid="percentageSql" />,0),2)
            as
            today_day_all_growth_rate

            ,format(coalesce((today_week_activation.today_week_activation
            -
            last_week_activation.last_week_activation)
            /
            last_week_activation.last_week_activation
            *
            <include refid="percentageSql" />,0),2)
            as
            today_week_activation_growth_rate

            ,format(coalesce((today_week_approved.today_week_approved
            -
            last_week_approved.last_week_approved)
            /
            last_week_approved.last_week_approved
            *
            <include refid="percentageSql" />,0),2)
            as
            today_week_approved_growth_rate

            ,format(coalesce(((today_week_approved.today_week_approved + today_week_activation.today_week_activation)
            -
            (last_week_approved.last_week_approved + last_week_activation.last_week_activation))
            /
            (last_week_approved.last_week_approved + last_week_activation.last_week_activation)
            *
            <include refid="percentageSql" />,0),2)
            as
            today_week_valid_growth_rate

            ,format(coalesce(
            (today_week_approved.today_week_approved + today_week_activation.today_week_activation)
            /
            today_week_all
            *
            <include refid="percentageSql" />,0),2)
            as
            today_week_ratio_growth_rate

            ,format(coalesce((today_week_artificial.today_week_artificial
            -
            last_week_artificial.last_week_artificial)
            /
            last_week_artificial.last_week_artificial
            *
            <include refid="percentageSql" />,0),2)
            as
            today_week_artificial_growth_rate

            ,format(coalesce((today_week_all.today_week_all
            -
            last_week_all.last_week_all)
            /
            last_week_all.last_week_all
            *
            <include refid="percentageSql" />,0),2)
            as
            today_week_all_growth_rate

            ,format(coalesce((today_month_activation.today_month_activation
            -
            last_month_activation.last_month_activation)
            /
            last_month_activation.last_month_activation
            *
            <include refid="percentageSql" />,0),2)
            as
            today_month_activation_growth_rate

            ,format(coalesce((today_month_approved.today_month_approved
            -
            last_month_approved.last_month_approved)
            /
            last_month_approved.last_month_approved
            *
            <include refid="percentageSql" />,0),2)
            as
            today_month_approved_growth_rate

            ,format(coalesce((today_month_approved.today_month_approved + today_month_activation.today_month_activation)
            /
            today_month_all.today_month_all
            *
            <include refid="percentageSql" />,0),2)
            as
            today_month_ratio_growth_rate

            ,format(coalesce(((today_month_approved.today_month_approved + today_month_activation.today_month_activation)
            -
            (last_month_approved.last_month_approved + last_month_activation.last_month_activation))
            /
            (last_month_approved.last_month_approved + last_month_activation.last_month_activation)
            *
            <include refid="percentageSql" />,0),2)
            as
            today_month_valid_growth_rate

            ,format(coalesce((today_month_artificial.today_month_artificial
            -
            last_month_artificial.last_month_artificial)
            /
            last_month_artificial.last_month_artificial
            *
            <include refid="percentageSql" />,0),2)
            as
            today_month_artificial_growth_rate

            ,format(coalesce((today_month_all.today_month_all
            -
            last_month_all.last_month_all)
            /
            last_month_all.last_month_all
            *
            <include refid="percentageSql" />,0),2)
            as
            today_month_all_growth_rate
		from
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_day_activation
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusActivation" />
                <include refid="todayDay" />
            )
            as
                today_day_activation
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_day_approved
            FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusApproved" />
            <include refid="todayDay" />
            )
            as
                today_day_approved
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_day_artificial
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusArtificial" />
                <include refid="todayDay" />
            )
            as
                today_day_artificial
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_day_refuse
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusRefuse" />
                <include refid="todayDay" />
            )
            as
                today_day_refuse
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_day_all
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="todayDay" />
            )
            as
                today_day_all
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_week_activation
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusActivation" />
                <include refid="todayWeek" />
            )
            as
                today_week_activation
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_week_approved
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusApproved" />
                <include refid="todayWeek" />
            )
            as
                today_week_approved
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_week_artificial
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusArtificial" />
                <include refid="todayWeek" />
            )
            as
                today_week_artificial
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_week_refuse
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusRefuse" />
                <include refid="todayWeek" />
            )
            as
                today_week_refuse
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_week_all
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="todayWeek" />
            )
            as
                today_week_all
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_month_activation
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusActivation" />
                <include refid="todayMonth" />
            )
            as
                today_month_activation
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_month_approved
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusApproved" />
                <include refid="todayMonth" />
            )
            as
                today_month_approved
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_month_artificial
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusArtificial" />
                <include refid="todayMonth" />
            )
            as
                today_month_artificial
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_month_refuse
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="statusRefuse" />
                <include refid="todayMonth" />
            )
            as
                today_month_refuse
            ,
            (
            SELECT
                COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_month_all
            FROM
                <include refid="tableSql" />
                <include refid="relevanceSql" />
                <include refid="whereSqlModel" />
                <include refid="todayMonth" />
            )
            as
                today_month_all
            ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_yester_activation
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusActivation" />
            <include refid="yesterday" />
        )
        as
            today_yester_activation
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_yester_approved
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusApproved" />
            <include refid="yesterday" />
        )
        as
            today_yester_approved
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_yester_artificial
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusArtificial" />
            <include refid="yesterday" />
        )
        as
            today_yester_artificial
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_yester_refuse
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusRefuse" />
            <include refid="yesterday" />
        )
        as
            today_yester_refuse
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as today_yester_all
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="yesterday" />
        )
        as
            today_yester_all
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_week_activation
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusActivation" />
            <include refid="lastWeek" />
        )
        as
            last_week_activation
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_week_approved
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusApproved" />
            <include refid="lastWeek" />
        )
        as
            last_week_approved
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_week_artificial
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusArtificial" />
            <include refid="lastWeek" />
        )
        as
            last_week_artificial
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_week_refuse
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusRefuse" />
            <include refid="lastWeek" />
        )
        as
            last_week_refuse
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_week_all
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="lastWeek" />
        )
        as
            last_week_all
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_month_activation
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusActivation" />
            <include refid="lastMonth" />
        )
        as
            last_month_activation
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_month_approved
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusApproved" />
            <include refid="lastMonth" />
        )
        as
            last_month_approved
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_month_artificial
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusArtificial" />
            <include refid="lastMonth" />
        )
        as
            last_month_artificial
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_month_refuse
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="statusRefuse" />
            <include refid="lastMonth" />
        )
        as
            last_month_refuse
        ,
        (
        SELECT
            COUNT(DISTINCT <include refid="tableSqlPReport" />.id) as last_month_all
        FROM
            <include refid="tableSql" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel" />
            <include refid="lastMonth" />
        )
        as
            last_month_all
    </select>
    <sql id="whereSqlModel">
        where 1 = 1
        <if test="managementId != null and managementId != ''">
            and <include refid="tableSqlSManagement" />.id = #{managementId}
        </if>
        <if test="manageCardTypeId != null and manageCardTypeId != ''">
            and <include refid="tableSqlMCType" />.id = #{manageCardTypeId}
        </if>
        <if test="inManagementId != null and inManagementId != ''">
            and <include refid="tableSqlSManagement" />.id in
            <foreach collection="inManagementId" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
    </sql>
    <sql id="tableSql">
        manage.management_personnel
    </sql>
    <!--  倍数  -->
    <sql id="percentageSql">
        100
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlPReport">
        manage.performance_report
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlSManagement">
        manage.sys_management
    </sql>
    <!--  关联表  -->
    <sql id="tableSqlMCType">
        manage.manage_card_type
    </sql>
    <!--  进行关联表  -->
    <sql id="relevanceSql">
        LEFT JOIN <include refid="tableSqlPReport" /> ON <include refid="tableSql" />.management_id = <include refid="tableSqlPReport" />.management_id
        <include refid="reportApproverState" />
        LEFT JOIN <include refid="tableSqlSManagement" /> ON <include refid="tableSqlSManagement" />.id = <include refid="tableSql" />.management_id
        LEFT JOIN <include refid="tableSqlMCType" /> ON <include refid="tableSqlMCType" />.manage_code = <include refid="tableSqlSManagement" />.management_code
    </sql>
    <!--  通过状态  -->
    <sql id="reportApproverState">
        AND <include refid="tableSqlPReport" />.approver_state = 'agree'
    </sql>
    <!--  本日  -->
    <sql id="todayDay">
        AND to_days(<include refid="tableSqlPReport" />.report_time) = to_days(NOW())
    </sql>
    <!--  本周  -->
    <sql id="todayWeek">
        AND YEARWEEK(date_format(<include refid="tableSqlPReport" />.report_time ,'%Y-%m-%d') - INTERVAL 1 DAY) = YEARWEEK(now() - INTERVAL 1 DAY)
    </sql>
    <!--  本月  -->
    <sql id="todayMonth">
        AND DATE_FORMAT( <include refid="tableSqlPReport" />.report_time, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
    </sql>
    <!--  30分钟内记录  -->
    <sql id="within30Minutes">
        AND <include refid="tableSqlPReport" />.report_time > CURRENT_TIMESTAMP - INTERVAL 30 MINUTE
    </sql>
    <!--  48小时内的数据  -->
    <sql id="inFortyEightHours">
        AND DATE(<include refid="tableSqlPReport" />.report_time) > date_sub(curdate(),interval 2 day)
    </sql>
    <!--  昨天记录  -->
    <sql id="yesterday">
        AND date(<include refid="tableSqlPReport" />.report_time)= DATE(NOW() - INTERVAL 1 DAY)
    </sql>
    <!--  上周记录  -->
    <sql id="lastWeek">
        AND YEARWEEK(date_format(<include refid="tableSqlPReport" />.report_time,'%Y-%m-%d')) = YEARWEEK(now()) - 1
    </sql>
    <!--  上月记录  -->
    <sql id="lastMonth">
        AND PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( <include refid="tableSqlPReport" />.report_time , '%Y%m' ) ) = 1
    </sql>
    <!--  激活状态  -->
    <sql id="statusActivation">
        AND <include refid="tableSqlPReport" />.report_status = '激活'
    </sql>
    <!--  批核状态  -->
    <sql id="statusApproved">
        AND <include refid="tableSqlPReport" />.report_status = '批核'
    </sql>
    <!--  转人工状态  -->
    <sql id="statusArtificial">
        AND <include refid="tableSqlPReport" />.report_status = '转人工'
    </sql>
    <!--  拒绝  -->
    <sql id="statusRefuse">
        AND <include refid="tableSqlPReport" />.report_status = '拒绝'
    </sql>
</mapper>