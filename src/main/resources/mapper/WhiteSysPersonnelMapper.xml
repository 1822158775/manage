<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.WhiteSysPersonnelMapper">
    <resultMap id="entity" type="com.example.manage.entity.SysPersonnel">
        <result column="id" property="id" />
        <result column="phone" property="phone" />
        <result column="place_of_domicile" property="placeOfDomicile" />
        <result column="personnel_code" property="personnelCode" />
        <result column="username" property="username" />
        <result column="role_id" property="roleId" />
        <result column="password" property="password" />
        <result column="name" property="name" />
        <result column="sex" property="sex" />
        <result column="position_post" property="positionPost" />
        <result column="image" property="image" />
        <result column="birthday" property="birthday" />
        <result column="employment_status" property="employmentStatus" />
        <result column="chief_steward_id" property="chiefStewardId" />
        <result column="salary" property="salary" />
        <result column="standby_application" property="standbyApplication" />
        <result column="official_or_trainee_staff" property="officialOrTraineeStaff" />
        <result column="social_security_payment" property="socialSecurityPayment" />
        <result column="commercial_insurance" property="commercialInsurance" />
        <result column="entry_time" property="entryTime" />
        <result column="id_number" property="idNumber" />
        <result column="open_id" property="openId" />
        <result column="emergency_contact_name" property="emergencyContactName" />
        <result column="emergency_contact_phone" property="emergencyContactPhone" />
        <result column="permanent_residence" property="permanentResidence" />
        <result column="trial_date" property="trialDate" />
        <association property="sysRole" javaType="com.example.manage.entity.SysRole">
            <result column="r_id" property="id" />
            <result column="r_name" property="name" />
        </association>
        <collection property="sysManagement" ofType="com.example.manage.entity.SysManagement">
            <result column="m_id" property="id" />
            <result column="m_name" property="name" />
            <result column="m_project_address" property="projectAddress" />
            <result column="m_available_balance" property="availableBalance" />
            <result column="m_monthly_indicators" property="monthlyIndicators" />
            <result column="m_management_state" property="managementState" />
        </collection>
    </resultMap>

    <select id="queryOne" resultMap="entity" parameterType="hashmap">
        select
        <include refid="returnSql"/>
        from
        <include refid="tableSql" />
        <include refid="relevanceSql" />
        <include refid="whereSqlModel" />
    </select>

    <select id="queryAll" resultMap="entity" parameterType="hashmap">
        select
        <include refid="returnSql"/>
        from
        <include refid="tableSql" />
        <include refid="relevanceSql" />
        <include refid="whereSqlModel" />
        <include refid="safeOrderBy" />
    </select>
    <!--  返回  -->
    <sql id="returnSql">
        <include refid="tableSql"/>.*
        ,sys_role.name as r_name
        ,sys_role.id as r_id
        ,sys_management.id as m_id
        ,sys_management.name as m_name
        ,sys_management.project_address as m_project_address
        ,sys_management.available_balance as m_available_balance
        ,sys_management.monthly_indicators as m_monthly_indicators
        ,sys_management.management_state as m_management_state
    </sql>
    <sql id="tableSql">
        manage.sys_personnel
    </sql>
    <!--  进行关联表  -->
    <sql id="relevanceSql">
        LEFT JOIN sys_role on sys_role.id = <include refid="tableSql"/>.role_id
        LEFT JOIN management_personnel on management_personnel.personnel_code = <include refid="tableSql" />.personnel_code
        LEFT JOIN sys_management on sys_management.id = management_personnel.management_id
    </sql>
    <sql id="whereSqlModel">
        where 1 = 1
        <if test="roleId != null "> and <include refid="tableSql" />.`role_id` = #{roleId}</if>
        <if test="inRoleId != null and inRoleId != ''">
            and <include refid="tableSql" />.role_id in
            <foreach collection="inRoleId" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="personnelId != null "> and <include refid="tableSql" />.`id` = #{personnelId}</if>
        <if test="managementId != null "> and management_personnel.`management_id` = #{managementId}</if>
        <if test="employmentStatus != null "> and <include refid="tableSql" />.`employment_status` = #{employmentStatus}</if>
        <if test="gtLevelSorting != null"> and sys_role.`level_sorting` > #{gtLevelSorting}</if>
        <if test="inManagementId != null and inManagementId != ''">
            and management_personnel.`management_id` in
            <foreach collection="inManagementId" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </if>
        and (<include refid="tableSql" />.`employment_status` = 1 or <include refid="tableSql" />.`employment_status` = 2 or <include refid="tableSql" />.`leave_time` >= DATE_SUB(CURDATE(), INTERVAL 2 MONTH))
    </sql>
    <sql id="safeOrderBy">
        order by
        <if test="safeOrderByState">
            FIELD(<include refid="tableSql"/>.id,371,372,48,370,35),
        </if>
        <include refid="tableSql"/>.employment_status desc,<include refid="tableSql"/>.id desc
    </sql>
</mapper>