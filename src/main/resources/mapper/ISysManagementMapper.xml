<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.manage.mapper.ISysManagementMapper">
    <resultMap id="entity" type="com.example.manage.entity.SysManagement">
        <result column="id" property="id" />
        <result column="name" property="name" />
        <result column="project_address" property="projectAddress" />
        <result column="available_balance" property="availableBalance" />
        <result column="monthly_indicators" property="monthlyIndicators" />
        <result column="management_state" property="managementState" />
        <result column="management_code" property="managementCode" />
        <result column="number_of_people" property="numberOfPeople" />

        <result column="south_latitude" property="southLatitude" />
        <result column="northern_latitude" property="northernLatitude" />
        <result column="east_longitude" property="eastLongitude" />
        <result column="west_longitude" property="westLongitude" />

        <result column="start_punch_in" property="startPunchIn" />
        <result column="start_clock_out" property="startClockOut" />
        <result column="end_clock_out" property="endClockOut" />

        <collection property="cardTypeS" ofType="com.example.manage.entity.CardType">
            <result column="c_id" property="id" />
            <result column="c_name" property="name" />
            <result column="c_amount" property="amount" />
        </collection>
    </resultMap>
    <select id="queryCount" resultType="int" parameterType="hashmap">
        select count(DISTINCT <include refid="tableSqlAs" />.id) as id from
            <include refid="tableSql" />
        as
            <include refid="tableSqlAs" />
            <include refid="relevanceSql" />
            <include refid="whereSqlModel"/>
    </select>
    <select id="queryAll" resultMap="entity" parameterType="hashmap">
        select
            <include refid="returnSql"/>
        from
            (<include refid="tableReturn" />)
        as
            <include refid="tableSqlAs" />
            <include refid="relevanceSql" />
    </select>
    <!--  返回  -->
    <sql id="returnSql">
        <include refid="tableSqlAs" />.*
        ,card_type.id as c_id
        ,card_type.name as c_name
        ,card_type.amount as c_amount
    </sql>
    <!--  子表count  -->
    <sql id="tableReturnCount">
        select
        <include refid="tableSql"/>.id
        from
        <include refid="tableSql"/>
        <include refid="safeOrderBy"/>
    </sql>
    <!--  子表  -->
    <sql id="tableReturn">
        select
        <include refid="tableSql"/>.*
        from
        <include refid="tableSql"/>
        <include refid="whereSqlModelAs"/>
        <include refid="safeOrderBy"/>
        <include refid="safeLIMIT"/>
    </sql>
    <sql id="tableSqlAs">
        sys_mm
    </sql>
    <sql id="tableSql">
        manage.sys_management
    </sql>
    <!--  进行关联表  -->
    <sql id="relevanceSql">
        LEFT JOIN manage_card_type on manage_card_type.manage_code = <include refid="tableSqlAs" />.management_code
        LEFT JOIN card_type on card_type.id = manage_card_type.card_type_id
    </sql>
    <sql id="whereSqlModel">
        where 1 = 1
        <if test="id != null "> and <include refid="tableSqlAs" />.`id` = #{id}</if>
        <if test="keyWord != null and keyWord != ''"> and <include refid="tableSqlAs" />.`name` like concat('%',#{keyWord},'%')</if>
        <if test="managementState != null "> and <include refid="tableSqlAs" />.`management_state` = #{managementState}</if>
    </sql>
    <sql id="whereSqlModelAs">
        where 1 = 1
        <if test="id != null "> and <include refid="tableSql" />.`id` = #{id}</if>
        <if test="keyWord != null and keyWord != ''"> and <include refid="tableSql" />.`name` like concat('%',#{keyWord},'%')</if>
        <if test="managementState != null "> and <include refid="tableSql" />.`management_state` = #{managementState}</if>
    </sql>
    <sql id="safeLIMIT">
        <if test="queryAll != 'yes'">
            <if test="pageNum != null and pageNum != ''">
                LIMIT #{index},#{pageNum}
            </if>
        </if>
    </sql>
    <sql id="safeOrderBy">
        order by <include refid="tableSql"/>.id desc
    </sql>
</mapper>